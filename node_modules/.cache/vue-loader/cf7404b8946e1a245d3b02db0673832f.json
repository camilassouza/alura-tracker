{"remainingRequest":"/home/camila/repo/alura-tracker/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/camila/repo/alura-tracker/src/components/Cronometro.vue?vue&type=template&id=5e860048&scoped=true","dependencies":[{"path":"/home/camila/repo/alura-tracker/src/components/Cronometro.vue","mtime":1682465026706},{"path":"/home/camila/repo/alura-tracker/node_modules/cache-loader/dist/cjs.js","mtime":1682465067137},{"path":"/home/camila/repo/alura-tracker/node_modules/babel-loader/lib/index.js","mtime":1682465067337},{"path":"/home/camila/repo/alura-tracker/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1682465065721},{"path":"/home/camila/repo/alura-tracker/node_modules/cache-loader/dist/cjs.js","mtime":1682465067137},{"path":"/home/camila/repo/alura-tracker/node_modules/vue-loader-v16/dist/index.js","mtime":1682465065369}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPHNlY3Rpb24+CiAgICA8c3Ryb25nIGNsYXNzPSJkaXNwbGF5Ij4KICAgICAge3sgdGVtcG9EZWNvcnJpZG8gfX0KICAgIDwvc3Ryb25nPgogIDwvc2VjdGlvbj4K"},{"version":3,"sources":["/home/camila/repo/alura-tracker/src/components/Cronometro.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACrB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/home/camila/repo/alura-tracker/src/components/Cronometro.vue","sourceRoot":"","sourcesContent":["<template>\n  <section>\n    <strong class=\"display\">\n      {{ tempoDecorrido }}\n    </strong>\n  </section>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\n\nexport default defineComponent({\n  name: 'Cronometro',\n  props: {\n    tempoEmSegundos: {\n      type: Number,\n      default: 0\n    }\n  },\n  computed: {\n    tempoDecorrido () : string {\n      return new Date(this.tempoEmSegundos * 1000).toISOString().substr(11,8)\n    }\n  },\n})\n</script>\n\n<style scoped>\n.display {\n  color: var(--texto-primario);\n}\n</style>"]}]}